{"version":3,"sources":["webpack:///./src/containers/TagList/index.ts","webpack:///./src/containers/TagList/TagList.tsx","webpack:///./src/components/Button/ButtonAsLink/ButtonAsLink.tsx","webpack:///./src/components/Button/ButtonAsLink/index.ts","webpack:///./src/components/Button/IconButton/IconButtonAsLink/IconButtonAsLink.tsx","webpack:///./src/components/Button/IconButton/IconButtonAsLink/index.ts","webpack:///./src/components/Pagination/index.ts","webpack:///./src/components/Pagination/Pagination.tsx","webpack:///./src/templates/homeTemplate.tsx"],"names":["TagListContainer","current","className","limit","sortedTags","tags","group","sort","t1","t2","totalCount","TagList","map","t","tag","slice","cx","ButtonAsLink","size","children","theme","rest","IconButtonAsLink","iconName","Icon","name","Pagination","totalPages","currentPage","aria-label","to","pageQuery","Home","data","pageContext","checklists","Layout","LinkLightAsAnchor","target","rel","href","process","ariaHidden","Checklists","items","nodes"],"mappings":"4hHAEeA,G,UCcqB,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAYnDC,EAXuB,OAWLC,KAAKC,MAAMC,MAAK,SAACC,EAAIC,GAAL,OAAYA,EAAGC,WAAaF,EAAGE,cAEvE,OACE,kBAACC,EAAA,EAAD,CACEN,KAAMD,EAAWQ,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO,MAAIC,MAAM,EAAGZ,GAChDF,QAASA,EACTC,UAAWc,IAAG,iBAAkBd,O,wHCxBtC,ICNee,EDMiB,SAAC,GAMpB,UALXC,YAKW,MALJ,SAKI,EAJXC,EAIW,EAJXA,SAIW,IAHXC,aAGW,MAHH,UAGG,EAFXlB,EAEW,EAFXA,UACGmB,E,oIACQ,4CACX,OACE,kBAAC,OAAD,eACEnB,UAAWc,IACT,WADW,aAEEI,GAFF,oBAIKF,GAAkB,WAATA,EAJd,GAMXhB,IAEEmB,GAEHF,IElBP,ICTeG,EDSqB,SAAC,GAAD,IAAGpB,EAAH,EAAGA,UAAWqB,EAAd,EAAcA,SAAaF,E,oIAA3B,oCAClC,kBAAC,EAAD,eAAcnB,UAAWc,IAAG,gBAAiBd,IAAgBmB,GAC3D,kBAACG,EAAA,EAAD,CAAMtB,UAAU,sBAAsBuB,KAAMF,MEXjCG,G,UCWe,SAAC,GAAD,IAAGxB,EAAH,EAAGA,UAAWyB,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,YAA1B,OAC5B,yBAAK1B,UAAWc,IAAG,eAAgBd,GAAY2B,aAAW,yBACvDD,EAAc,GACb,kBAAC,EAAD,CACEE,GAAoB,IAAhBF,EAAoB,IAApB,gBAAyCA,EAAc,GAC3D1B,UAAU,yBACVqB,SAAS,aACTH,MAAM,WACNF,KAAK,SACLW,aAAW,wBAIdF,EAAa,GAAKC,IAAgBD,GACjC,kBAAC,EAAD,CACEG,GAAE,gBAAiBF,EAAc,GACjC1B,UAAU,qBACVqB,SAAS,cACTH,MAAM,WACNF,KAAK,SACLW,aAAW,uB,YC4BNE,G,8BAAY,cAeVC,UAjDS,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACvBC,EAAeF,EAAfE,WAER,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKlC,UAAU,oBACb,kBAAC,EAAD,CACEA,UAAU,uDACVC,MAAO,KAGT,yBAAKD,UAAU,wBACb,wBAAIA,UAAU,qBAAd,cAEA,kBAACmC,EAAA,EAAD,CACEnC,UAAU,wBACVoC,OAAO,SACPC,IAAI,sBACJC,KAAMC,wBAJR,sBAMsB,IACpB,kBAACjB,EAAA,EAAD,CAAMtB,UAAU,8BAA8BuB,KAAK,gBAAgBiB,YAAU,MAGjF,yBAAKxC,UAAU,+CAAf,aACaiC,EAAWzB,WADxB,0BAGA,kBAACiC,EAAA,EAAD,CAAYzC,UAAU,qBAAqB0C,MAAOT,EAAWU,QAC7D,kBAAC,EAAD,CAAYlB,WAAYO,EAAYP,WAAYC,YAAaM,EAAYN","file":"component---src-templates-home-template-tsx-8ba7d6edb789deb12dc6.js","sourcesContent":["import TagListContainer from './TagList';\r\n\r\nexport default TagListContainer;\r\n","import React, { FC } from 'react';\r\nimport cx from 'classnames';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nimport { TagsQueryQuery } from '../../../graphql-types';\r\n\r\nimport TagList from '../../components/TagList';\r\n\r\nimport './o-page-taglist.scss';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  current?: string;\r\n  limit?: number;\r\n}\r\n\r\nconst TagListContainer: FC<Props> = ({ current, className, limit }) => {\r\n  const data: TagsQueryQuery = useStaticQuery(graphql`\r\n    query TagsQuery {\r\n      tags: allMarkdownRemark {\r\n        group(field: frontmatter___tags) {\r\n          tag: fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const sortedTags = data.tags.group.sort((t1, t2) => t2.totalCount - t1.totalCount);\r\n\r\n  return (\r\n    <TagList\r\n      tags={sortedTags.map(t => t.tag || '').slice(0, limit)}\r\n      current={current}\r\n      className={cx('o-page-taglist', className)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TagListContainer;\r\n","import React, { FC } from 'react';\r\nimport cx from 'classnames';\r\nimport { Link, GatsbyLinkProps } from 'gatsby';\r\n\r\nimport '../c-button.scss';\r\n\r\nimport { Props as ButtonProps } from '..';\r\n\r\nexport type Props = ButtonProps<Omit<GatsbyLinkProps<{}>, 'ref'>>;\r\n\r\nconst ButtonAsLink: FC<Props> = ({\r\n  size = 'normal',\r\n  children,\r\n  theme = 'primary',\r\n  className,\r\n  ...rest\r\n}: Props) => {\r\n  return (\r\n    <Link\r\n      className={cx(\r\n        'c-button',\r\n        `c-button--${theme}`,\r\n        {\r\n          [`c-button--${size}`]: size !== 'normal',\r\n        },\r\n        className,\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ButtonAsLink;\r\n","import ButtonAsLink from './ButtonAsLink';\r\n\r\nexport * from './ButtonAsLink';\r\n\r\nexport default ButtonAsLink;\r\n","import React, { FC } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport '../c-icon-button.scss';\r\nimport Icon, { IconName } from '../../../Icon';\r\nimport ButtonAsLink, { Props as LinkButtonProps } from '../../ButtonAsLink';\r\n\r\ninterface Props extends LinkButtonProps {\r\n  iconName: IconName;\r\n}\r\n\r\nconst IconButtonAsLink: FC<Props> = ({ className, iconName, ...rest }) => (\r\n  <ButtonAsLink className={cx('c-icon-button', className)} {...rest}>\r\n    <Icon className=\"c-icon-button__icon\" name={iconName} />\r\n  </ButtonAsLink>\r\n);\r\n\r\nexport default IconButtonAsLink;\r\n","import IconButtonAsLink from './IconButtonAsLink';\r\n\r\nexport default IconButtonAsLink;\r\n","import Pagination from './Pagination';\r\n\r\nexport default Pagination;\r\n","import React, { FC } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport IconButtonAsLink from '../Button/IconButton/IconButtonAsLink';\r\n\r\nimport './c-pagination.scss';\r\n\r\ninterface Props {\r\n  totalPages: number;\r\n  currentPage: number;\r\n  className?: string;\r\n}\r\n\r\nconst Pagination: FC<Props> = ({ className, totalPages, currentPage }) => (\r\n  <nav className={cx('c-pagination', className)} aria-label=\"Checklists Navigation\">\r\n    {currentPage > 1 && (\r\n      <IconButtonAsLink\r\n        to={currentPage === 2 ? '/' : `/checklists/${currentPage - 1}`}\r\n        className=\"c-pagination__previous\"\r\n        iconName=\"arrow-left\"\r\n        theme=\"tertiary\"\r\n        size=\"medium\"\r\n        aria-label=\"Previous checklists\"\r\n      />\r\n    )}\r\n\r\n    {totalPages > 1 && currentPage !== totalPages && (\r\n      <IconButtonAsLink\r\n        to={`/checklists/${currentPage + 1}`}\r\n        className=\"c-pagination__next\"\r\n        iconName=\"arrow-right\"\r\n        theme=\"tertiary\"\r\n        size=\"medium\"\r\n        aria-label=\"Next checklists\"\r\n      />\r\n    )}\r\n  </nav>\r\n);\r\n\r\nexport default Pagination;\r\n","import React, { FC } from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport { HomePageQueryQuery } from '../../graphql-types';\r\n\r\nimport TagListContainer from '../containers/TagList';\r\n\r\nimport Layout from '../components/Layout';\r\nimport Checklists from '../components/Checklists';\r\nimport Pagination from '../components/Pagination';\r\nimport Icon from '../components/Icon';\r\nimport LinkLightAsAnchor from '../components/links/LinkLight/LinkLightAsAnchor';\r\n\r\nimport './o-checklists-heading.scss';\r\nimport './o-suggest-a-checklist.scss';\r\nimport './o-page-container.scss';\r\n\r\ninterface HomePageContext {\r\n  totalPages: number;\r\n  currentPage: number;\r\n}\r\n\r\ninterface Props {\r\n  data: HomePageQueryQuery;\r\n  pageContext: HomePageContext;\r\n}\r\n\r\nconst Home: FC<Props> = ({ data, pageContext }) => {\r\n  const { checklists } = data;\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"o-page-container\">\r\n        <TagListContainer\r\n          className=\"u-margin-bottom-xlarge@lg-up u-margin-bottom@md-down\"\r\n          limit={36}\r\n        />\r\n\r\n        <div className=\"o-checklists-heading\">\r\n          <h2 className=\"u-margin-bottom-0\">Checklists</h2>\r\n\r\n          <LinkLightAsAnchor\r\n            className=\"o-suggest-a-checklist\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={process.env.GATSBY_SUGGEST_LINK}\r\n          >\r\n            Suggest a Checklist{' '}\r\n            <Icon className=\"o-suggest-a-checklist__icon\" name=\"external-link\" ariaHidden />\r\n          </LinkLightAsAnchor>\r\n        </div>\r\n        <div className=\"u-text-style-large-body u-margin-top-xsmall\">\r\n          There are {checklists.totalCount} of them and counting!\r\n        </div>\r\n        <Checklists className=\"u-margin-top-small\" items={checklists.nodes} />\r\n        <Pagination totalPages={pageContext.totalPages} currentPage={pageContext.currentPage} />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query HomePageQuery($skip: Int!, $limit: Int!) {\r\n    checklists: allMarkdownRemark(\r\n      sort: { fields: [frontmatter___featured, frontmatter___date], order: [ASC, DESC] }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        ...Checklist\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}